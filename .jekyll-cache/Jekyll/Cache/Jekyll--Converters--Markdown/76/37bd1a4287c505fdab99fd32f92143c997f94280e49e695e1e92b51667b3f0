I"@<p>当我们需要进行性能优化时，说明我们服务器无法满足日益增长的业务。性能优化是一个比较大的课题，需要从以下几个方面进行探讨</p>

<ul>
  <li>当前系统结构瓶颈</li>
  <li>了解业务模式</li>
  <li>性能与安全</li>
</ul>

<h4 id="当前系统结构瓶颈">当前系统结构瓶颈</h4>

<p>首先需要了解的是当前系统瓶颈，用的是什么，跑的是什么业务。里面的服务是什么样子，每个服务最大支持多少并发。比如针对nginx而言，我们处理静态资源效率最高的瓶颈是多大？能支持多少qps访问请求？怎么得出系统当前的结构瓶颈？</p>

<p>可以通过查看当前cpu负荷，内存使用率，进程使用率来做简单判断。还可以通过操作系统的一些工具来判断当前系统性能瓶颈，如分析对应的日志，查看请求数量。也可以通过nginx http_stub_status_module模块来查看对应的连接数，总握手次数，总请求数。也可以对线上进行压力测试，来了解当前的系统能性能，并发数，做好性能评估。</p>

<h4 id="了解业务模式">了解业务模式</h4>

<p>虽然我们是在做性能优化，但还是要熟悉业务，最终目的都是为业务服务的。我们要了解每一个接口业务类型是什么样的业务，比如电子商务抢购模式，这种情况平时流量会很小，但是到了抢购时间，流量一下子就会猛涨。也要了解系统层级结构，每一层在中间层做的是代理还是动静分离，还是后台进行直接服务。需要我们对业务接入层和系统层次要有一个梳理</p>

<h4 id="性能与安全">性能与安全</h4>

<p>性能与安全也是一个需要考虑的因素，往往大家注重性能忽略安全或注重安全又忽略性能。比如说我们在设计防火墙时，如果规则过于全面肯定会对性能方面有影响。如果对性能过于注重在安全方面肯定会留下很大隐患。所以大家要评估好两者的关系，把握好两者的孰重孰轻，以及整体的相关性。权衡好对应的点。</p>

<h1 id="1ab接口压力测试工具">1.ab接口压力测试工具</h1>

<p>ab是Apache超文本传输协议(HTTP)的性能测试工具。其设计意图是描绘当前所安装的Apache的执行性能，主要是显示你安装的Apache每秒可以处理多少个请求。</p>

<p>查看更多ab使用详情<a href="/linux/2018/12/06/ab.html" title="/linux/2018/12/06/ab.html" target="_blank">传送门</a></p>

<h1 id="2系统与nginx性能优化">2.系统与nginx性能优化</h1>

<p>大家对相关的系统瓶颈及现状有了一定的了解之后，就可以根据影响性能方面做一个全体的评估和优化。</p>

<ul>
  <li>网络（网络流量、是否有丢包，网络的稳定性都会影响用户请求）</li>
  <li>系统（系统负载、饱和、内存使用率、系统的稳定性、硬件磁盘是否有损坏）</li>
  <li>服务（连接优化、内核性能优化、http服务请求优化都可以在nginx中根据业务来进行设置）</li>
  <li>程序（接口性能、处理请求速度、每个程序的执行效率）</li>
  <li>数据库、底层服务</li>
</ul>

<p>上面列举出来每一级都会有关联，也会影响整体性能，这里主要关注的是nginx服务这一层。</p>

<h1 id="3文件句柄">3.文件句柄</h1>

<p>在linux/unix操作系统中一切皆文件，我们的设备是文件，文件是文件，文件夹也是文件。当我们用户每发起一次请求，就会产生一个文件句柄。文件句柄可以简单的理解为<code class="language-plaintext highlighter-rouge">文件句柄就是一个索引</code>。文件句柄就会随着请求量的增多,进程调用频繁增加，那么产生的文件句柄也就会越多。</p>

<p>系统默认对文件句柄是有限制的，不可能会让一个进程无限制的调用句柄。因为系统资源是有限的，所以我们需要限制每一个服务能够使用多大的文件句柄。操作系统默认使用的文件句柄是1024个句柄。</p>

<h4 id="设置方式">设置方式</h4>

<ul>
  <li>系统全局性修改</li>
  <li>用户局部性修改</li>
  <li>进程局部性修改</li>
</ul>

<h4 id="系统全局性修该和用户局部性修改">系统全局性修该和用户局部性修改</h4>
<pre><code class="language-linux">vim /etc/security/limits.conf
</code></pre>

<p>在文件最下面找到</p>
<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#*               soft    core            0</span>
<span class="c1">#*               hard    rss             10000</span>
<span class="c1">#@student        hard    nproc           20</span>
<span class="c1">#@faculty        soft    nproc           20</span>
<span class="c1">#@faculty        hard    nproc           50</span>
<span class="c1">#ftp             hard    nproc           0</span>
<span class="c1">#@student        -       maxlogins       4</span>

<span class="k">root</span> <span class="s">soft</span> <span class="s">nofile</span> <span class="mi">65535</span>  <span class="c1">#root用户</span>
<span class="s">root</span> <span class="s">hard</span> <span class="s">nofile</span> <span class="mi">65535</span>
<span class="s">*</span>    <span class="s">soft</span> <span class="s">nofile</span> <span class="mi">65535</span>  <span class="c1">#所有用户</span>
<span class="s">*</span>    <span class="s">hard</span> <span class="s">nofile</span> <span class="mi">65535</span>
</code></pre></div></div>

<p>可以看到<code class="language-plaintext highlighter-rouge">root</code>和<code class="language-plaintext highlighter-rouge">*</code>，root代表是root用户，*代表的是所有用户，后面的数字就是文件句柄大小。大家可以根据个人业务来进行设置。</p>

<h4 id="进程局部性修改">进程局部性修改</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vim /etc/nginx/nginx.conf
</code></pre></div></div>

<p>　　</p>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">user</span>  <span class="s">nginx</span><span class="p">;</span>
<span class="k">worker_processes</span>  <span class="mi">1</span><span class="p">;</span>  

<span class="k">error_log</span>  <span class="n">/var/log/nginx/error.log</span> <span class="s">warn</span><span class="p">;</span>
<span class="k">pid</span>        <span class="n">/var/run/nginx.pid</span><span class="p">;</span>

<span class="k">worker_rlimit_nofile</span> <span class="mi">65535</span><span class="p">;</span> <span class="c1">#进程限制</span>

<span class="k">events</span> <span class="p">{</span>
    <span class="kn">worker_connections</span>  <span class="mi">1024</span><span class="p">;</span>
<span class="p">}</span>


<span class="k">http</span> <span class="p">{</span>
    <span class="kn">include</span>       <span class="n">/etc/nginx/mime.types</span><span class="p">;</span>
    <span class="kn">default_type</span>  <span class="nc">application/octet-stream</span><span class="p">;</span>

    <span class="kn">log_format</span>  <span class="s">main</span>  <span class="s">'</span><span class="nv">$http_user_agent</span><span class="s">'</span> <span class="s">'</span><span class="nv">$remote_addr</span> <span class="s">-</span> <span class="nv">$remote_user</span> <span class="s">[</span><span class="nv">$time_local</span><span class="s">]</span> <span class="s">"</span><span class="nv">$request</span><span class="s">"</span> <span class="s">'</span>
                      <span class="s">'</span><span class="nv">$status</span> <span class="nv">$body_bytes_sent</span> <span class="s">"</span><span class="nv">$http_referer</span><span class="s">"</span> <span class="s">'</span>
                      <span class="s">'"</span><span class="nv">$http_user_agent</span><span class="s">"</span> <span class="s">"</span><span class="nv">$http_x_forwarded_for</span><span class="s">"</span> <span class="s">'</span>
                      <span class="s">'"</span><span class="nv">$args</span><span class="s">"</span> <span class="s">"</span><span class="nv">$request_uri</span><span class="s">"'</span><span class="p">;</span>

    <span class="kn">access_log</span>  <span class="n">/var/log/nginx/access.log</span>  <span class="s">main</span><span class="p">;</span>
 
    <span class="kn">sendfile</span>        <span class="no">on</span><span class="p">;</span> 
    <span class="c1">#tcp_nopush     on; </span>

    <span class="kn">keepalive_timeout</span>  <span class="mi">65</span><span class="p">;</span> 

    <span class="c1">#gzip  on; </span>

    <span class="kn">include</span> <span class="n">/etc/nginx/conf.d/*.conf</span><span class="p">;</span>
<span class="p">}</span>

</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">worker_rlimit_nofile</code> 是在进程上面进行限制。</p>

<h1 id="4cpu的亲和配置">4.cpu的亲和配置</h1>

<p>cpu的亲和能够使nginx对于不同的work工作进程绑定到不同的cpu上面去。就能够减少在work间不断切换cpu，把进程通常不会在处理器之间频繁迁移，进程迁移的频率小，来减少性能损耗。<a href="http://nginx.org/en/docs/ngx_core_module.html#worker_cpu_affinity" title="http://nginx.org/en/docs/ngx_core_module.html#worker_cpu_affinity" target="_blank">nginx 亲和配置</a></p>

<p>查看当前cpu</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cat /proc/cpuinfo|grep "physical id"|sort |uniq|wc -l
</code></pre></div></div>

<p>查看cpu是几核的</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cat /proc/cpuinfo|grep "cpu cores"|uniq
</code></pre></div></div>

<p>查看cpu使用率</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>top  回车后按 1
</code></pre></div></div>

<h4 id="配置worker_processes">配置worker_processes</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vim /etc/nginx/nginx.conf
</code></pre></div></div>

<p>将刚才查看到自己cpu * cpu核心就是<code class="language-plaintext highlighter-rouge">worker_processes</code></p>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">worker_processes</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">#小菜的配置很低所以都是1核</span>
</code></pre></div></div>

<h4 id="cpu亲和配置">cpu亲和配置</h4>

<p>假如小菜的配置是2cpu，每个cpu是8核。配置如下</p>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">worker_processes</span> <span class="mi">16</span><span class="p">;</span>
<span class="k">worker_cpu_affinity</span> <span class="mi">1010101010101010</span> <span class="mi">0101010101010101</span><span class="p">;</span>
</code></pre></div></div>

<p>配置完成后可以通过下面命令查看nginx进程配置在哪个核上</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ps -eo pid,args,psr |grep [n]ginx
</code></pre></div></div>

<p>在nginx 1.9版本之后，就帮我们自动绑定了cpu;</p>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">worker_cpu_affinity</span> <span class="s">auto</span><span class="p">;</span>
</code></pre></div></div>

<h1 id="5nginx通用配置优化">5.nginx通用配置优化</h1>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vim /etc/nginx/nginx.conf
</code></pre></div></div>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#将nginx进程设置为普通用户，为了安全考虑</span>
<span class="k">user</span> <span class="s">nginx</span><span class="p">;</span> 

<span class="c1">#上面配置讲过了</span>
<span class="k">worker_processes</span> <span class="mi">1</span><span class="p">;</span>
<span class="k">worker_cpu_affinity</span> <span class="s">auto</span><span class="p">;</span>

<span class="c1">#日志配置成warn</span>
<span class="k">error_log</span> <span class="n">/var/log/nginx/error.log</span> <span class="s">warn</span><span class="p">;</span> 
<span class="k">pid</span> <span class="n">/var/run/nginx.pid</span><span class="p">;</span>

<span class="k">worker-rlimit-nofile</span> <span class="mi">25535</span><span class="p">;</span> <span class="c1">#文件句柄</span>

<span class="k">events</span> <span class="p">{</span>
	<span class="kn">use</span> <span class="s">epoll</span><span class="p">;</span>  <span class="c1">#事件模型</span>
	<span class="kn">worker_connections</span> <span class="mi">1024</span><span class="p">;</span> <span class="c1">#nginx 请求连接数，对于1核nginx能够处理1024 如果是多核可以将连接数调高 worker_processes * 1024</span>
<span class="p">}</span>

<span class="k">http</span> <span class="p">{</span>
    <span class="kn">include</span>       <span class="n">/etc/nginx/mime.types</span><span class="p">;</span>
    <span class="kn">default_type</span>  <span class="nc">application/octet-stream</span><span class="p">;</span>
	
	<span class="kn">charset</span> <span class="s">utf-8</span><span class="p">;</span>  <span class="c1">#设置字符集</span>

	<span class="c1">#设置日志输出格式，根据自己的情况设置</span>
    <span class="kn">log_format</span>  <span class="s">main</span>  <span class="s">'</span><span class="nv">$http_user_agent</span><span class="s">'</span> <span class="s">'</span><span class="nv">$remote_addr</span> <span class="s">-</span> <span class="nv">$remote_user</span> <span class="s">[</span><span class="nv">$time_local</span><span class="s">]</span> <span class="s">"</span><span class="nv">$request</span><span class="s">"</span> <span class="s">'</span>
                      <span class="s">'</span><span class="nv">$status</span> <span class="nv">$body_bytes_sent</span> <span class="s">"</span><span class="nv">$http_referer</span><span class="s">"</span> <span class="s">'</span>
                      <span class="s">'"</span><span class="nv">$http_user_agent</span><span class="s">"</span> <span class="s">"</span><span class="nv">$http_x_forwarded_for</span><span class="s">"</span> <span class="s">'</span>
                      <span class="s">'"</span><span class="nv">$args</span><span class="s">"</span> <span class="s">"</span><span class="nv">$request_uri</span><span class="s">"'</span><span class="p">;</span>

    <span class="kn">access_log</span>  <span class="n">/var/log/nginx/access.log</span>  <span class="s">main</span><span class="p">;</span>
 
    <span class="kn">sendfile</span>        <span class="no">on</span><span class="p">;</span>   <span class="c1">#对静态资源的处理比较有效</span>
    <span class="c1">#tcp_nopush     on;   #如果做静态资源服务器可以打开</span>
	<span class="c1">#tcp_nodeny     on;	  #当nginx做动态的服务时可以选择打开</span>
		
    <span class="kn">keepalive_timeout</span>  <span class="mi">65</span><span class="p">;</span> 

	<span class="c1">########</span>
	<span class="c1">#Gzip module</span>
    <span class="kn">gzip</span>  <span class="no">on</span><span class="p">;</span>    <span class="c1">#文件压缩默认可以打开</span>
	<span class="kn">gzip_disable</span> <span class="s">"MSIE</span> <span class="s">[1-6]</span><span class="err">\</span><span class="s">."</span><span class="p">;</span> <span class="c1">#对于有些浏览器不能识别压缩，需要过滤如ie6</span>
	<span class="kn">gzip_http_version</span> <span class="mi">1</span><span class="s">.1</span><span class="p">;</span>

    <span class="kn">include</span> <span class="n">/etc/nginx/conf.d/*.conf</span><span class="p">;</span>
<span class="p">}</span>

</code></pre></div></div>

:ET