I"c"<p>Apache Benchmark(简称ab) 是Apache安装包中自带的压力测试工具 ，简单易用,在此提供 ab 在 centOS7 下的安装和使用方法。</p>

<p>小菜在学习nginx配置时需要用到<code class="language-plaintext highlighter-rouge">ab</code>命令，在网络上搜索一篇博客，将其内容拷贝过来便于查询，在此向博主致敬。</p>

<ul>
  <li>● CSDN博主的帖子 <a href="https://blog.csdn.net/u011415782/article/details/78501799" title="https://blog.csdn.net/u011415782/article/details/78501799" target="_blank">https://blog.csdn.net/u011415782/article/details/78501799</a></li>
</ul>

<h1 id="1安装">1.安装</h1>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum -y install httpd-tools
</code></pre></div></div>

<h1 id="2语法">2.语法</h1>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ab [参数选项]
</code></pre></div></div>

<h1 id="3参数选项">3.参数选项</h1>

<pre><code class="language-linux">-n：即requests，用于指定压力测试总共的执行次数
-c：即concurrency，用于指定的并发数
-t：即timelimit，等待响应的最大时间(单位：秒)
-b：即windowsize，TCP发送/接收的缓冲大小(单位：字节)
-p：即postfile，发送POST请求时需要上传的文件，此外还必须设置-T参数
-u：即putfile，发送PUT请求时需要上传的文件，此外还必须设置-T参数
-T：即content-type，用于设置Content-Type请求头信息，例如：application/x-www-form-urlencoded，默认值为text/plain
-v：即verbosity，指定打印帮助信息的冗余级别
-w：以HTML表格形式打印结果
-i：使用HEAD请求代替GET请求
-x：插入字符串作为table标签的属性
-y：插入字符串作为tr标签的属性
-z：插入字符串作为td标签的属性
-C：添加cookie信息，例如："Apache=1234"(可以重复该参数选项以添加多个)
-H：添加任意的请求头，例如："Accept-Encoding: gzip"，请求头将会添加在现有的多个请求头之后(可以重复该参数选项以添加多个)
-A：添加一个基本的网络认证信息，用户名和密码之间用英文冒号隔开
-P：添加一个基本的代理认证信息，用户名和密码之间用英文冒号隔开
-X：指定使用的和端口号，例如:"126.10.10.3:88"
-V：打印版本号并退出
-k：使用HTTP的KeepAlive特性
-d：不显示百分比
-S：不显示预估和警告信息
-g：输出结果信息到gnuplot格式的文件中
-e：输出结果信息到CSV格式的文件中
-r：指定接收到错误信息时不退出程序
-H：显示用法信息，其实就是ab -help
</code></pre>

<h1 id="4内容解释">4.内容解释</h1>

<pre><code class="language-linux">Server Software:        nginx/1.10.2 (服务器软件名称及版本信息)
Server Hostname:        192.168.1.106(服务器主机名)
Server Port:            80 (服务器端口)
Document Path:          /index1.html. (供测试的URL路径)
Document Length:        3721 bytes (供测试的URL返回的文档大小)
Concurrency Level:      1000 (并发数)
Time taken for tests:   2.327 seconds (压力测试消耗的总时间)
Complete requests:      5000 (的总次数)
Failed requests:        688 (失败的请求数)
Write errors:           0 (网络连接写入错误数)
Total transferred:      17402975 bytes (传输的总数据量)
HTML transferred:       16275725 bytes (HTML文档的总数据量)
Requests per second:    2148.98 [#/sec] (mean) (平均每秒的请求数) 这个是非常重要的参数数值，服务器的吞吐量 
Time per request:       465.338 [ms] (mean) (所有并发用户(这里是1000)都请求一次的平均时间)
Time  request:       	0.247 [ms] (mean, across all concurrent requests) (单个用户请求一次的平均时间)
Transfer rate:          7304.41 [Kbytes/sec] received 每秒获取的数据长度 (传输速率，单位：KB/s)
...
Percentage of the requests served within a certain time (ms)
  50%    347  ## 50%的请求在347ms内返回 
  66%    401  ## 60%的请求在401ms内返回 
  75%    431
  80%    516
  90%    600
  95%    846
  98%   1571
  99%   1593
 100%   1619 (longest request)
</code></pre>

<h1 id="5示例演示">5.示例演示</h1>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ab -n 50 -c 20 http://walidream.com/sub_module
</code></pre></div></div>

<p>输出内容</p>

<pre><code class="language-linux">Server Software:        nginx/1.14.1
Server Hostname:        walidream.com
Server Port:            80

Document Path:          /sub_module
Document Length:        169 bytes

Concurrency Level:      20
Time taken for tests:   0.005 seconds
Complete requests:      50
Failed requests:        0
Write errors:           0
Non-2xx responses:      50
Total transferred:      14900 bytes
HTML transferred:       8450 bytes
Requests per second:    9746.59 [#/sec] (mean)
Time per request:       2.052 [ms] (mean)
Time per request:       0.103 [ms] (mean, across all concurrent requests)
Transfer rate:          2836.41 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0    0   0.1      0       1
Processing:     1    1   0.3      1       2
Waiting:        0    1   0.2      1       1
Total:          1    2   0.3      2       2

Percentage of the requests served within a certain time (ms)
  50%      2
  66%      2
  75%      2
  80%      2
  90%      2
  95%      2
  98%      2
  99%      2
 100%      2 (longest request)

</code></pre>

<h1 id="6注意事项">6.注意事项</h1>

<p>● 测试机与被测试机要分开</p>

<p>● 不要对线上的服务器做压力测试</p>

<p>● 观察测试工具ab所在机器，以及被测试的前端机的CPU、内存、网络等都不超过最高限度的75%</p>

<h1 id="7ab性能指标">7.ab性能指标</h1>

<h3 id="1吞吐率requests-per-second">1.吞吐率（Requests per second）</h3>

<p>服务器并发处理能力的量化描述，单位是reqs/s，指的是在某个并发用户数下单位时间内处理的请求数。某个并发用户数下单位时间内能处理的最大请求数，称之为最大吞吐率。记住：吞吐率是基于并发用户数的。这句话代表了两个含义：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>● 吞吐率和并发用户数相关

● 不同的并发用户数下，吞吐率一般是不同的
</code></pre></div></div>

<p>计算公式：总请求数/处理完成这些请求数所花费的时间，即</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Request per second=Complete requests/Time taken for tests
</code></pre></div></div>

<p>必须要说明的是，这个数值表示当前机器的整体性能，值越大越好</p>

<h3 id="2并发连接数the-number-of-concurrent-connections">2.并发连接数（The number of concurrent connections）</h3>

<p>并发连接数指的是某个时刻服务器所接受的请求数目，简单的讲，就是一个会话。</p>

<h3 id="3并发用户数concurrency-level">3.并发用户数（Concurrency Level）</h3>

<p>要注意区分这个概念和并发连接数之间的区别，一个用户可能同时会产生多个会话，也即连接数。在HTTP/1.1下，IE7支持两个并发连接，IE8支持6个并发连接，FireFox3支持4个并发连接，所以相应的，我们的并发用户数就得除以这个基数。</p>

<h3 id="4用户平均请求等待时间time-per-request">4.用户平均请求等待时间（Time per request）</h3>

<p>计算公式：处理完成所有请求数所花费的时间/（总请求数/并发用户数），即：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Time per request=Time taken for tests/（Complete requests/Concurrency Level）
</code></pre></div></div>

<h3 id="5服务器平均请求等待时间time-per-requestacross-all-concurrent-requests">5.服务器平均请求等待时间（Time per request:across all concurrent requests）</h3>

<p>计算公式：处理完成所有请求数所花费的时间/总请求数，即：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Time taken for/testsComplete requests
</code></pre></div></div>

<p>可以看到，它是吞吐率的倒数。同时，它也等于用户平均请求等待时间/并发用户数，即</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Time per request/Concurrency Level
</code></pre></div></div>

:ET