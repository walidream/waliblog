I"/<p>lua是一个简洁、轻量、可扩展的脚本语言。nginx+lua开发充分的结合Nginx的并发处理epoll优势和lua的轻量实现简单的功能切高并发的场景。</p>

<h1 id="1安装lua">1.安装lua</h1>

<p>如果是centos7版本之上会自带lua，版本5.1.4。lua没有安装</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yum install lua
</code></pre></div></div>

<h1 id="2安装luajit">2.安装LuaJIT</h1>

<p>安装LuaJIT环境，比自带的lua解析器扩展模块多并且高效。</p>

<pre><code class="language-linux">cd /opt/download
wget http://luajit.org/download/LuaJIT-2.0.2.tar.gz
tar -zxvf LuaJIT-2.0.2.tar.gz
cd LuaJIT-2.0.2
make install  PREFIX=/usr/local/LuaJIT
export LUAJIT_LIB=/usr/local/LuaJIT/lib
export LUAJIT_INC=/usr/local/LuaJIT/include/luajit-2.0
</code></pre>

<h4 id="加载lua库加入到ldsoconf文件">加载lua库，加入到ld.so.conf文件</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>echo "/usr/local/LuaJIT/lib" &gt;&gt; /etc/ld.so.conf
ldconfig
</code></pre></div></div>

<h1 id="3下载ngx_devel_kit和lua-nginx-module">3.下载ngx_devel_kit和lua-nginx-module</h1>

<pre><code class="language-linux">cd /opt/download
wget https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz
tar -zxvf v0.3.0.tar.gz

wget https://github.com/openresty/lua-nginx-module/archive/v0.10.9rc7.tar.gz
tar -zxvf v0.10.9rc7.tar.gz
</code></pre>

<h1 id="4nginx编译模块">4.nginx编译模块</h1>

<p>将ngx_devel_kit模块和lua-nginx-module模块编译进nginx</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd /opt/download/nginx-1.14.2
nginx -V
</code></pre></div></div>

<p>输出</p>

<p><code class="language-plaintext highlighter-rouge">--prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib64/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -fPIC' --with-ld-opt='-Wl,-z,relro -Wl,-z,now -pie' --add-module=/opt/download/echo-nginx-module-0.61 --with-http_geoip_module</code></p>

<h4 id="添加ngx_devel_kit模块和lua-nginx-module模块添加到编译参数">添加ngx_devel_kit模块和lua-nginx-module模块添加到编译参数</h4>

<p><code class="language-plaintext highlighter-rouge">--prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib64/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -fPIC' --with-ld-opt='-Wl,-z,relro -Wl,-z,now -pie' --add-module=/opt/download/echo-nginx-module-0.61 --with-http_geoip_module --add-module=/opt/download/lua-nginx-module-0.10.9rc7 --add-module=/opt/download/ngx_devel_kit-0.3.0</code></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./configure 编译参数
make &amp;&amp; make install
</code></pre></div></div>

<h1 id="5nginx调用lua模块指令">5.nginx调用lua模块指令</h1>

<p>nginx的可插拔模块化加载执行，共11个处理阶段</p>

<table>
  <thead>
    <tr>
      <th>参数</th>
      <th>描述</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>set_by_lua<br />set_by_lua_file</td>
      <td>设置nginx变量，可以实现复杂的复杂逻辑</td>
    </tr>
    <tr>
      <td>access_by_lua<br />access_by_lua_file</td>
      <td>请求访问阶段处理，用于访问控制</td>
    </tr>
    <tr>
      <td>content_by_lua<br />content_by_lua_file</td>
      <td>内容处理容器，介绍请求处理并输出响应</td>
    </tr>
  </tbody>
</table>

<h1 id="6nginx调用lua的api">6.nginx调用lua的api</h1>

<table>
  <thead>
    <tr>
      <th>api</th>
      <th>描述</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>ngx.var</td>
      <td>nginx变量</td>
    </tr>
    <tr>
      <td>ngx.req.get_headers</td>
      <td>获取请求头</td>
    </tr>
    <tr>
      <td>ngx.req.get_uri_args</td>
      <td>获取url请求参数</td>
    </tr>
    <tr>
      <td>ngx.redirect</td>
      <td>重定向</td>
    </tr>
    <tr>
      <td>ngx.print</td>
      <td>输出响应内容体</td>
    </tr>
    <tr>
      <td>ngx.say</td>
      <td>通ngx.print,但是最后会输出一个换行符</td>
    </tr>
    <tr>
      <td>ngx.header</td>
      <td>输出响应头</td>
    </tr>
    <tr>
      <td>…</td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h1 id="7灰度发布">7.灰度发布</h1>

<p>按照一定的关系区别，分部分的代码进行上线，使代码的发布能平滑过渡上线。</p>

<h4 id="未完成待续">未完成待续</h4>

:ET