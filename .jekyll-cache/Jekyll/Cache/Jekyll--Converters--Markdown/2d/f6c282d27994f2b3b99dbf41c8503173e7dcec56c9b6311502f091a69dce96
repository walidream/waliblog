I"n1<p><code class="language-plaintext highlighter-rouge">Tree Shaking</code>从字面上理解就是<code class="language-plaintext highlighter-rouge">树摇晃</code>。就是当我们在一个js文件中写入了多个导出的方法，但是引用时只使用了一部分，其他方法不应该被打包进来。</p>

<h1 id="1举例">1.举例</h1>

<h4 id="文件结构">文件结构</h4>

<div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">myProject
</span> |-dist
 |-node_modules
 |-src
<span class="gi">+    |-util
+       |-math.js
</span>     |-assets
        |-css
            |-index.css
        |-less
            |-index.less     
        |-sass
            |-index.scss
        |-images
            |-wali_logo.png
     |-index.html
     |-index.js
 |-package.json
 |-webpack.config.js
 |-postcss.config.js
 |-.babelrc
</code></pre></div></div>

<h4 id="srcutilmathjs">src/util/math.js</h4>

<pre><code class="language-javacript">export const add = (x,y) =&gt;{
    return x + y;
}

export const minus = (x,y) =&gt;{
    return x - y;
}
</code></pre>

<h4 id="srcindexjs">src/index.js</h4>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">add</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">./util/math</span><span class="dl">"</span><span class="p">;</span>

<span class="nx">add</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>

</code></pre></div></div>

<h4 id="运行webpack">运行webpack</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yarn run build
</code></pre></div></div>

<p>打开dist/main.js文件</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">...</span>
<span class="p">...</span>

<span class="cm">/***/</span> <span class="dl">"</span><span class="s2">./src/util/math.js</span><span class="dl">"</span><span class="p">:</span>
<span class="cm">/*!*********************************!*\
  !*** ./src/util/math.js ***!
  \*********************************/</span>
<span class="cm">/*! exports provided: add, minus */</span>
<span class="cm">/***/</span> <span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">module</span><span class="p">,</span> <span class="nx">__webpack_exports__</span><span class="p">,</span> <span class="nx">__webpack_require__</span><span class="p">)</span> <span class="p">{</span>

<span class="dl">"</span><span class="s2">use strict</span><span class="dl">"</span><span class="p">;</span>
<span class="nb">eval</span><span class="p">(</span><span class="dl">"</span><span class="s2">__webpack_require__.r(__webpack_exports__);</span><span class="se">\n</span><span class="s2">/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, </span><span class="se">\"</span><span class="s2">add</span><span class="se">\"</span><span class="s2">, function() { return add; });</span><span class="se">\n</span><span class="s2">/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, </span><span class="se">\"</span><span class="s2">minus</span><span class="se">\"</span><span class="s2">, function() { return minus; });</span><span class="se">\n</span><span class="s2">/**</span><span class="se">\r\n</span><span class="s2"> * Created by Administrator on 2019/5/28.</span><span class="se">\r\n</span><span class="s2"> */</span><span class="se">\n</span><span class="s2">const add = (x, y) =&gt; {</span><span class="se">\n</span><span class="s2">  return x + y;</span><span class="se">\n</span><span class="s2">};</span><span class="se">\n</span><span class="s2">const minus = (x, y) =&gt; {</span><span class="se">\n</span><span class="s2">  return x - y;</span><span class="se">\n</span><span class="s2">};//# sourceURL=[module]</span><span class="se">\n</span><span class="s2">//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXNzZXRzL3V0aWwvbWF0aC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9hc3NldHMvdXRpbC9tYXRoLmpzPzAwNWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENyZWF0ZWQgYnkgQWRtaW5pc3RyYXRvciBvbiAyMDE5LzUvMjguXHJcbiAqL1xuZXhwb3J0IGNvbnN0IGFkZCA9ICh4LCB5KSA9PiB7XG4gIHJldHVybiB4ICsgeTtcbn07XG5leHBvcnQgY29uc3QgbWludXMgPSAoeCwgeSkgPT4ge1xuICByZXR1cm4geCAtIHk7XG59OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9</span><span class="se">\n</span><span class="s2">//# sourceURL=webpack-internal:///./src/util/math.js</span><span class="se">\n</span><span class="dl">"</span><span class="p">);</span>

<span class="cm">/***/</span> <span class="p">})</span>

<span class="p">...</span>
<span class="p">...</span>
</code></pre></div></div>

<p>上面这段代码就是webpack打包生成的代码，我们看到在<code class="language-plaintext highlighter-rouge">math.js</code>中将<code class="language-plaintext highlighter-rouge">add,minus</code>方法都打包进来。这样就会导致我们最终生成的文件特别大。tree shaking概念可以帮助我们将没有用的代码给摇晃掉。</p>

<h1 id="2配置webpack">2.配置webpack</h1>

<h4 id="packagejson">package.json</h4>

<div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">{</span>
  "name": "webpack",
  "version": "1.0.0",
  "description": "webpack测试",
<span class="gi">+  "sideEffects":[
+	  "*.css"
+  ],
</span>  "main": "index.js",
  "author": "wali",
  "private": true,
  "license": "MIT",
  "scripts": {
    "dev": "npx webpack-dev-server --mode=development --colors",
    "dist": "npx webpack --mode=production",
    "build": "npx webpack --mode=development --colors"
  },
  "dependencies": {
    "@babel/core": "^7.4.5",
    "@babel/plugin-transform-runtime": "^7.4.4",
    "@babel/preset-env": "^7.4.5",
    "@babel/runtime": "^7.4.5",
    "@babel/runtime-corejs2": "^7.4.5",
    "autoprefixer": "^9.5.1",
    "babel-loader": "^8.0.6",
    "clean-webpack-plugin": "^2.0.2",
    "css-loader": "^2.1.1",
    "extract-text-webpack-plugin": "^3.0.2",
    "file-loader": "^3.0.1",
    "html-loader": "^0.5.5",
    "html-webpack-plugin": "^3.2.0",
    "image-webpack-loader": "^4.6.0",
    "less": "^3.9.0",
    "less-loader": "^5.0.0",
    "lodash": "^4.17.11",
    "node-sass": "^4.12.0",
    "postcss-loader": "^3.0.0",
    "sass-loader": "^7.1.0",
    "style-loader": "^0.23.1",
    "webpack": "^4.32.0",
    "webpack-cli": "^3.3.2",
    "webpack-dev-server": "^3.4.1"
  }
<span class="err">}</span>
</code></pre></div></div>

<h4 id="webpackconfigjs">webpack.config.js</h4>

<div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">module.exports = {
</span>  ...
<span class="gi">+  optimization: {
+    usedExports: true
+  }
</span>  ...
<span class="err">};</span>
</code></pre></div></div>

<p>这里需要特别强调下，<code class="language-plaintext highlighter-rouge">...</code>是说之前webpack.config.js的代码还在，只是添加了几行代码。随着功能越来越多，webpack.config.js文件的代码会越来越长，全部贴出来实在是太费篇幅了，后面小菜就都采用这种方式。</p>

<h4 id="运行webpack-1">运行webpack</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yarn run build
</code></pre></div></div>

<p>打开<code class="language-plaintext highlighter-rouge">dist/main.js</code>文件</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">...</span>
<span class="p">...</span>
<span class="cm">/***/</span> <span class="dl">"</span><span class="s2">./src/util/math.js</span><span class="dl">"</span><span class="p">:</span>
<span class="cm">/*!*********************************!*\
  !*** ./src/util/math.js ***!
  \*********************************/</span>
<span class="cm">/*! exports provided: add, minus */</span>
<span class="cm">/*! exports used: add */</span>
<span class="cm">/***/</span> <span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">module</span><span class="p">,</span> <span class="nx">__webpack_exports__</span><span class="p">,</span> <span class="nx">__webpack_require__</span><span class="p">)</span> <span class="p">{</span>

<span class="dl">"</span><span class="s2">use strict</span><span class="dl">"</span><span class="p">;</span>
<span class="nb">eval</span><span class="p">(</span><span class="dl">"</span><span class="s2">/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, </span><span class="se">\"</span><span class="s2">a</span><span class="se">\"</span><span class="s2">, function() { return add; });</span><span class="se">\n</span><span class="s2">/* unused harmony export minus */</span><span class="se">\n</span><span class="s2">/**</span><span class="se">\r\n</span><span class="s2"> * Created by Administrator on 2019/5/28.</span><span class="se">\r\n</span><span class="s2"> */</span><span class="se">\n</span><span class="s2">const add = (x, y) =&gt; {</span><span class="se">\n</span><span class="s2">  return x + y;</span><span class="se">\n</span><span class="s2">};</span><span class="se">\n</span><span class="s2">const minus = (x, y) =&gt; {</span><span class="se">\n</span><span class="s2">  return x - y;</span><span class="se">\n</span><span class="s2">};//# sourceURL=[module]</span><span class="se">\n</span><span class="s2">//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXNzZXRzL3V0aWwvbWF0aC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9hc3NldHMvdXRpbC9tYXRoLmpzPzAwNWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENyZWF0ZWQgYnkgQWRtaW5pc3RyYXRvciBvbiAyMDE5LzUvMjguXHJcbiAqL1xuZXhwb3J0IGNvbnN0IGFkZCA9ICh4LCB5KSA9PiB7XG4gIHJldHVybiB4ICsgeTtcbn07XG5leHBvcnQgY29uc3QgbWludXMgPSAoeCwgeSkgPT4ge1xuICByZXR1cm4geCAtIHk7XG59OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==</span><span class="se">\n</span><span class="s2">//# sourceURL=webpack-internal:///./src/util/math.js</span><span class="se">\n</span><span class="dl">"</span><span class="p">);</span>

<span class="cm">/***/</span> <span class="p">}),</span>

<span class="p">...</span>
<span class="p">...</span>
</code></pre></div></div>
<p>我们发现<code class="language-plaintext highlighter-rouge">exports used: add</code>说明webpack已经知道在index.js文件只引用了<code class="language-plaintext highlighter-rouge">add</code>方法，但是没有删除，没有删除的原因是因为我们开发模式，开发模式下如果删除就会对代码行数产生影响不利定位错误，当我们把webpack模式改为生产模式，<code class="language-plaintext highlighter-rouge">minus</code>方法就会删除掉。</p>

<h4 id="webpackconfigjs-1">webpack.config.js</h4>

<div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">module.exports = {
</span>  ...  
<span class="gd">-  devtool:'cheap-eval-source-map',
</span><span class="gi">+  devtool:'cheap-source-map',
</span>  ...
<span class="err">};</span>
</code></pre></div></div>

<h4 id="运行生产webpack">运行生产webpack</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yarn run dist
</code></pre></div></div>

<p><img src="http://walidream.com:9999/blogImage/webpack/webpack_15.png" alt="ssl" /></p>

<p>我们看到在生成环境下，就只有<code class="language-plaintext highlighter-rouge">add</code>方法被引入进来，而<code class="language-plaintext highlighter-rouge">minus</code>方法就会被摇晃掉</p>

<h1 id="3代码回滚">3.代码回滚</h1>

<p>测试完后，我们将代码回滚下，以便后续我们继续演示。</p>

<h4 id="webpackconfigjs-2">webpack.config.js</h4>

<div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">module.exports = {
</span>  ...  
<span class="gi">+  devtool:'cheap-eval-source-map',
</span><span class="gd">-  devtool:'cheap-source-map',
</span>  ...
<span class="err">};</span>
</code></pre></div></div>

:ET