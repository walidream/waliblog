I"^@<p>字典在其他语言里可能会被叫做 联合内存 或 联合数组。与以连续整数为索引的序列不同，字典是以 关键字 为索引的，关键字可以是任意不可变类型，通常是字符串或数字。如果一个元组只包含字符串、数字或元组，那么这个元组也可以用作关键字。但如果元组直接或间接地包含了可变对象，那么它就不能用作关键字。列表不能用作关键字，因为列表可以通过索引、切片或 append() 和 extend() 之类的方法来改变。</p>

<p>理解字典的最好方式，就是将它看做是一个 键: 值 对的集合，键必须是唯一的（在一个字典中）。一对花括号可以创建一个空字典：{} 。另一种初始化字典的方式是在一对花括号里放置一些以逗号分隔的键值对，而这也是字典输出的方式。</p>

<h1 id="1字典的定义">1.字典的定义</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="nb">type</span><span class="p">({})</span>
<span class="o">&lt;</span><span class="k">class</span> <span class="err">'</span><span class="nc">dict</span><span class="s">'&gt;

&gt;&gt;&gt; user = {'</span><span class="n">name</span><span class="s">':'</span><span class="n">张三</span><span class="s">','</span><span class="n">age</span><span class="s">':18,'</span><span class="n">sex</span><span class="s">':'</span><span class="n">男</span><span class="s">'}
&gt;&gt;&gt; user 
{'</span><span class="n">name</span><span class="s">': '</span><span class="n">张三</span><span class="s">', '</span><span class="n">age</span><span class="s">': 18, '</span><span class="n">sex</span><span class="s">': '</span><span class="n">男</span><span class="s">'}

&gt;&gt;&gt; user['</span><span class="n">name</span><span class="s">']
'</span><span class="n">张三</span><span class="s">'

#对一个字典执行 list(d) 将返回包含该字典中所有键的列表，按插入次序排列 (如需其他排序，则要使用 sorted(d))
&gt;&gt;&gt; tel = list(user)
&gt;&gt;&gt; tel
['</span><span class="n">name</span><span class="s">', '</span><span class="n">age</span><span class="s">', '</span><span class="n">sex</span><span class="s">']

#要检查字典中是否存在一个特定键，可使用 in 关键字。
&gt;&gt;&gt; '</span><span class="n">name</span><span class="s">' in tel
True

# dict() 构造函数可以直接从键值对序列里创建字典
&gt;&gt;&gt; dict([('</span><span class="n">sape</span><span class="s">', 4139), ('</span><span class="n">guido</span><span class="s">', 4127), ('</span><span class="n">jack</span><span class="s">', 4098)])
{'</span><span class="n">sape</span><span class="s">': 4139, '</span><span class="n">guido</span><span class="s">': 4127, '</span><span class="n">jack</span><span class="s">': 4098}

# 字典推导式可以从任意的键值表达式中创建字典
&gt;&gt;&gt; {x: x**2 for x in (2, 4, 6)}
{2: 4, 4: 16, 6: 36}

#当关键字是简单字符串时，有时直接通过关键字参数来指定键值对更方便
&gt;&gt;&gt; dict(sape=4139, guido=4127, jack=4098)
{'</span><span class="n">sape</span><span class="s">': 4139, '</span><span class="n">guido</span><span class="s">': 4127, '</span><span class="n">jack</span><span class="s">': 4098}
</span></code></pre></div></div>

<h1 id="2访问字典的元素">2.访问字典的元素</h1>

<p>访问字典的元素是通过字典的<code class="language-plaintext highlighter-rouge">key</code>来访问字典某个值,key在字典中是唯一的</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">user</span> <span class="o">=</span> <span class="p">{</span><span class="s">'name'</span><span class="p">:</span><span class="s">'张三'</span><span class="p">,</span><span class="s">'age'</span><span class="p">:</span><span class="mi">18</span><span class="p">,</span><span class="s">'sex'</span><span class="p">:</span><span class="s">'男'</span><span class="p">}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">user</span><span class="p">[</span><span class="s">'name'</span><span class="p">]</span>
</code></pre></div></div>

<h1 id="3字典的操作">3.字典的操作</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">user</span> <span class="o">=</span> <span class="p">{</span><span class="s">'name'</span><span class="p">:</span><span class="s">'张三'</span><span class="p">,</span><span class="s">'age'</span><span class="p">:</span><span class="mi">18</span><span class="p">,</span><span class="s">'sex'</span><span class="p">:</span><span class="s">'男'</span><span class="p">}</span>

<span class="c1"># 修改字典内容
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">user</span><span class="p">[</span><span class="s">'name'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'隔壁老王'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">user</span>
<span class="p">{</span><span class="s">'name'</span><span class="p">:</span> <span class="s">'隔壁老王'</span><span class="p">,</span> <span class="s">'age'</span><span class="p">:</span> <span class="mi">18</span><span class="p">,</span> <span class="s">'sex'</span><span class="p">:</span> <span class="s">'男'</span><span class="p">}</span>

<span class="c1"># 删除字典元素
</span><span class="o">&gt;&gt;&gt;</span> <span class="k">del</span> <span class="n">user</span><span class="p">[</span><span class="s">'name'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">user</span>
<span class="p">{</span><span class="s">'age'</span><span class="p">:</span> <span class="mi">18</span><span class="p">,</span> <span class="s">'sex'</span><span class="p">:</span> <span class="s">'男'</span><span class="p">}</span>

<span class="c1"># 添加字典元素
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">user</span><span class="p">[</span><span class="s">'height'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'175cm'</span>
<span class="p">{</span><span class="s">'age'</span><span class="p">:</span> <span class="mi">18</span><span class="p">,</span> <span class="s">'sex'</span><span class="p">:</span> <span class="s">'男'</span><span class="p">,</span> <span class="s">'height'</span><span class="p">:</span> <span class="s">'175cm'</span><span class="p">}</span>

</code></pre></div></div>

<h1 id="4获取字典的长度">4.获取字典的长度</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">user</span> <span class="o">=</span> <span class="p">{</span><span class="s">'name'</span><span class="p">:</span><span class="s">'张三'</span><span class="p">,</span><span class="s">'age'</span><span class="p">:</span><span class="mi">18</span><span class="p">,</span><span class="s">'sex'</span><span class="p">:</span><span class="s">'男'</span><span class="p">}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
<span class="mi">3</span>
</code></pre></div></div>

<h1 id="5字典常用操作函数">5.字典常用操作函数</h1>

<table>
  <thead>
    <tr>
      <th>函数名</th>
      <th>描述</th>
      <th>示例</th>
      <th>结果</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>dict.clear()</td>
      <td>删除字典内所有元素</td>
      <td>{‘name’:’张三’,’age’:18}.clear()</td>
      <td>{}</td>
    </tr>
    <tr>
      <td>dict.copy()</td>
      <td>返回一个字典的浅复制</td>
      <td>{‘name’:’张三’,’age’:18}.copy()</td>
      <td>{‘name’:’张三’,’age’:18}.copy()</td>
    </tr>
    <tr>
      <td>dict.fromkeys(seq[,val])</td>
      <td>创建一个新字典，以序列 seq 中元素做字典的键，val 为字典所有键对应的初始值</td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>dict.get(key, default=None)</td>
      <td>返回指定键的值，如果值不在字典中返回default值</td>
      <td>{‘name’:’张三’,’age’:18}.get(‘age’)</td>
      <td>18</td>
    </tr>
    <tr>
      <td>dict.items()</td>
      <td>以列表返回可遍历的(键, 值) 元组数组</td>
      <td>{‘name’:’张三’,’age’:18}.items()</td>
      <td>dict_items([(‘name’, ‘张三’), (‘age’, 18)])</td>
    </tr>
    <tr>
      <td>dict.keys()</td>
      <td>以列表返回一个字典所有的键</td>
      <td>{‘name’:’张三’,’age’:18}.keys()</td>
      <td>dict_keys([‘name’, ‘age’])</td>
    </tr>
    <tr>
      <td>dict.update(dict2)</td>
      <td>把字典dict2的键/值对更新到dict里</td>
      <td>{‘name’:’张三’,’age’:18}.update({‘sex’:’男’,’height’:’190cm’})</td>
      <td>{‘name’: ‘张三’, ‘age’: 18, ‘sex’: ‘男’, ‘height’: ‘190cm’}</td>
    </tr>
    <tr>
      <td>dict.values()</td>
      <td>以列表返回字典中的所有值</td>
      <td>{‘name’:’张三’,’age’:18}.values()</td>
      <td>dict_values([‘张三’, 18])</td>
    </tr>
    <tr>
      <td>dict.pop(key)</td>
      <td>删除字典给定键 key 所对应的值，返回值为被删除的值。key值必须给出。 否则，返回default值。</td>
      <td>{‘name’:’张三’,’age’:18}.pop()</td>
      <td>‘张三’</td>
    </tr>
    <tr>
      <td>dict.popitem()</td>
      <td>随机返回并删除字典中的一对键和值</td>
      <td>{‘name’: ‘张三’, ‘age’: 18, ‘sex’: ‘男’, ‘height’: ‘190cm’}.popitem()</td>
      <td>(‘height’, ‘190cm’)</td>
    </tr>
    <tr>
      <td>dict.setdefault(key,default=None)</td>
      <td>和get()类似, 但如果键不存在于字典中，将会添加键并将值设为default</td>
      <td>{‘name’:’张三’,’age’:18}.setdefault(‘cc’)</td>
      <td>{‘name’:’张三’,’age’:18},’cc’:None}</td>
    </tr>
  </tbody>
</table>

<h1 id="6字典映射代替switch">6.字典映射代替switch</h1>

<p>在python中没有<code class="language-plaintext highlighter-rouge">switch</code>语句，官方建议用<code class="language-plaintext highlighter-rouge">if-elif</code>来代替switch语句。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">get_monday</span><span class="p">():</span>
    <span class="k">return</span> <span class="s">'Monday'</span>

<span class="k">def</span> <span class="nf">get_tuesday</span><span class="p">():</span>
    <span class="k">return</span> <span class="s">'Tuesday'</span>

<span class="k">def</span> <span class="nf">get_wednesday</span><span class="p">():</span>
    <span class="k">return</span> <span class="s">'Wednesday'</span>

<span class="k">def</span> <span class="nf">get_thursday</span><span class="p">():</span>
    <span class="k">return</span> <span class="s">'Thursday'</span>

<span class="k">def</span> <span class="nf">get_friday</span><span class="p">():</span>
    <span class="k">return</span> <span class="s">'Friday'</span>

<span class="k">def</span> <span class="nf">get_saturday</span><span class="p">():</span>
    <span class="k">return</span> <span class="s">'Saturday'</span>

<span class="k">def</span> <span class="nf">get_sunday</span><span class="p">():</span>
    <span class="k">return</span> <span class="s">'Sunday'</span>

<span class="k">def</span> <span class="nf">get_default</span><span class="p">():</span>
    <span class="k">return</span> <span class="s">'没有对应的星期'</span>

<span class="n">switcher</span> <span class="o">=</span> <span class="p">{</span>
    <span class="mi">0</span><span class="p">:</span> <span class="n">get_sunday</span><span class="p">,</span>
    <span class="mi">1</span><span class="p">:</span> <span class="n">get_monday</span><span class="p">,</span>
    <span class="mi">2</span><span class="p">:</span> <span class="n">get_tuesday</span><span class="p">,</span>
    <span class="mi">3</span><span class="p">:</span> <span class="n">get_wednesday</span><span class="p">,</span>
    <span class="mi">4</span><span class="p">:</span> <span class="n">get_thursday</span><span class="p">,</span>
    <span class="mi">5</span><span class="p">:</span> <span class="n">get_friday</span><span class="p">,</span>
    <span class="mi">6</span><span class="p">:</span> <span class="n">get_saturday</span>
<span class="p">}</span>

<span class="n">day</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">dayName</span> <span class="o">=</span> <span class="n">switcher</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">day</span><span class="p">,</span> <span class="n">get_default</span><span class="p">)()</span>
<span class="k">print</span><span class="p">(</span><span class="n">dayName</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="7字典遍历">7.字典遍历</h1>

<h4 id="遍历key">遍历key</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">di</span> <span class="o">=</span> <span class="p">{</span><span class="s">"name"</span><span class="p">:</span><span class="s">"张三"</span><span class="p">,</span><span class="s">"age"</span><span class="p">:</span><span class="mi">19</span><span class="p">,</span><span class="s">"sex"</span><span class="p">:</span><span class="s">"男"</span><span class="p">}</span>

<span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">di</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>


<span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">di</span><span class="p">.</span><span class="n">keys</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>

</code></pre></div></div>

<h4 id="遍历value值">遍历value值</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">di</span> <span class="o">=</span> <span class="p">{</span><span class="s">"name"</span><span class="p">:</span><span class="s">"张三"</span><span class="p">,</span><span class="s">"age"</span><span class="p">:</span><span class="mi">19</span><span class="p">,</span><span class="s">"sex"</span><span class="p">:</span><span class="s">"男"</span><span class="p">}</span>

<span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">di</span><span class="p">.</span><span class="n">values</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="遍历字典项">遍历字典项</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">di</span> <span class="o">=</span> <span class="p">{</span><span class="s">"name"</span><span class="p">:</span><span class="s">"张三"</span><span class="p">,</span><span class="s">"age"</span><span class="p">:</span><span class="mi">19</span><span class="p">,</span><span class="s">"sex"</span><span class="p">:</span><span class="s">"男"</span><span class="p">}</span>

<span class="k">for</span> <span class="n">k</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="n">di</span><span class="p">.</span><span class="n">items</span><span class="p">()</span>
    <span class="k">print</span><span class="p">(</span><span class="n">k</span><span class="p">,</span><span class="n">v</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="8小结">8.小结</h1>

<p><img src="http://walidream.com:9999/blogImage/python/python_2.png" alt="ssl" /></p>

:ET