I"Q*<p>在学习基本数据类型前，先了解下java关键字和标识符。</p>

<h1 id="1java中关键字">1.java中关键字</h1>

<table>
  <thead>
    <tr>
      <th> </th>
      <th> </th>
      <th> </th>
      <th> </th>
      <th> </th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>abstract</td>
      <td>boolean</td>
      <td>break</td>
      <td>byte</td>
      <td>case</td>
      <td>catch</td>
    </tr>
    <tr>
      <td>char</td>
      <td>class</td>
      <td>continue</td>
      <td>default</td>
      <td>do</td>
      <td>double</td>
    </tr>
    <tr>
      <td>else</td>
      <td>extends</td>
      <td>flase</td>
      <td>final</td>
      <td>finally</td>
      <td>float</td>
    </tr>
    <tr>
      <td>for</td>
      <td>if</td>
      <td>implements</td>
      <td>import</td>
      <td>instanceof</td>
      <td>int</td>
    </tr>
    <tr>
      <td>interface</td>
      <td>long</td>
      <td>native</td>
      <td>new</td>
      <td>null</td>
      <td>package</td>
    </tr>
    <tr>
      <td>private</td>
      <td>protected</td>
      <td>pulic</td>
      <td>return</td>
      <td>short</td>
      <td>static</td>
    </tr>
    <tr>
      <td>super</td>
      <td>switch</td>
      <td>synchronized</td>
      <td>this</td>
      <td>throw</td>
      <td>throws</td>
    </tr>
    <tr>
      <td>transient</td>
      <td>true</td>
      <td>try</td>
      <td>void</td>
      <td>volatile</td>
      <td>while</td>
    </tr>
  </tbody>
</table>

<h1 id="2标识符">2.标识符</h1>

<p>标识符就是用于给java程序中变量、类、方法等名称符号</p>

<p>使用标识符时，需要遵守几条规则：</p>
<ul>
  <li>标识符可以由字母、数字、下划线（_）、美元符（$）组成，但不能包含 @、%、空格等其它特殊字符，不能以数字开头</li>
  <li>标识符不能是 Java 关键字和保留字</li>
  <li>标识符是严格区分大小写的</li>
  <li>标识符的命名最好能反映出其作用，做到见名知意</li>
</ul>

<h1 id="3数据类型">3.数据类型</h1>

<p><img src="http://walidream.com:9999/blogImage/java/java_1.png" alt="ssl" /></p>

<h4 id="基本数据类型">基本数据类型</h4>

<table>
  <thead>
    <tr>
      <th>序号</th>
      <th>数据类型</th>
      <th>大小/位</th>
      <th>封装类</th>
      <th>默认值(零值)</th>
      <th>可表示数值范围</th>
      <th>对应的封装类</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>byte(字节)8</td>
      <td>Byte</td>
      <td>(btye)0</td>
      <td>-128~127</td>
      <td>java.lang.Byte</td>
      <td> </td>
    </tr>
    <tr>
      <td>2</td>
      <td>short(短整数)</td>
      <td>16</td>
      <td>Short</td>
      <td>(short)0</td>
      <td>-32768~32767</td>
      <td>java.lang.Short</td>
    </tr>
    <tr>
      <td>3</td>
      <td>int(整型)</td>
      <td>32</td>
      <td>Integer</td>
      <td>0</td>
      <td>-2147483648~2147483648</td>
      <td>java.lang.Integer</td>
    </tr>
    <tr>
      <td>4</td>
      <td>long(长整数)</td>
      <td>64</td>
      <td>Long</td>
      <td>0L</td>
      <td>-922337203684775808~922337203684775808</td>
      <td>java.lang.Long</td>
    </tr>
    <tr>
      <td>5</td>
      <td>float(单精度)</td>
      <td>32</td>
      <td>Float</td>
      <td>0.0F</td>
      <td>1.4E-45~3.402823E38</td>
      <td>java.lang.Float</td>
    </tr>
    <tr>
      <td>6</td>
      <td>double(双精度)</td>
      <td>64</td>
      <td>Double</td>
      <td>0.0D</td>
      <td>4.9E-324~1.7976931348623157E308</td>
      <td>java.lang.Double</td>
    </tr>
    <tr>
      <td>7</td>
      <td>char(字符)</td>
      <td>16</td>
      <td>CHaracter</td>
      <td>空(‘\u0000’)</td>
      <td>0~65535</td>
      <td>java.lang.Boolean</td>
    </tr>
    <tr>
      <td>8</td>
      <td>boolean</td>
      <td>8</td>
      <td>Boolean</td>
      <td>flase</td>
      <td>true或false</td>
      <td>java.lang.Character</td>
    </tr>
  </tbody>
</table>

<h4 id="引用数据类型">引用数据类型</h4>

<p>在java中，引用类型的变量非常类似于C/C++的指针。<code class="language-plaintext highlighter-rouge">引用类型</code>指向一个对象，指向对象的变量是引用变量。</p>

<p><code class="language-plaintext highlighter-rouge">对象</code>、<code class="language-plaintext highlighter-rouge">数组</code>都是引用数据类型、所有的引用类型默认值都是<code class="language-plaintext highlighter-rouge">null</code></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">People</span><span class="o">{</span>
    <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloWorld</span><span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">123</span><span class="o">;</span>
        
        <span class="nc">People</span> <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">People</span><span class="o">();</span>
        <span class="n">p</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="s">"张三"</span><span class="o">;</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">n</span><span class="o">);</span> <span class="c1">//123</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">p</span><span class="o">);</span> <span class="c1">//People@15db972</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">n</span><span class="o">);</span> <span class="c1">//张三</span>
        
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p><img src="http://walidream.com:9999/blogImage/java/java_2.png" alt="ssl" /></p>

<h1 id="4java存储">4.java存储</h1>

<p>程序运行时，对象是怎么进行放置安排的呢？特别是内存是怎样分配的呢？在java中，有5个不同的地方可以存储数据</p>

<ul>
  <li>1.<code class="language-plaintext highlighter-rouge">寄存器</code>：这是最快的存储区，它不同于其它存储区-处理器内部。寄存器的数量及其有限，所以寄存器根据需求进行分配，你不能直接控制。</li>
  <li>2.<code class="language-plaintext highlighter-rouge">堆栈</code>：位于通用RAM(随机访问存储器)中，通过堆栈指针可以从处理器那里获得直接支持。堆栈指针若向下移动，则分配新的内存，若向上移动，则释放内存。这是一种快速有效的分配存储方法，仅次于寄存器。创建程序时，java系统必须知道存储在堆栈内所有项的确切生命周期，以便上下移动堆栈指针。虽然java数据存储于
堆栈中-特别是对象引用，但是java对象并不存储于其中</li>
  <li>3.<code class="language-plaintext highlighter-rouge">堆</code>：一种通用的内存池(也位于RAM区)，用于存放所有的java对象，堆不同于堆栈的好处是：编译器不需要知道存储的数据在堆里存活了多长时间。因此，在堆里分配存储有很大的灵活性。当需要一个对象时，只需用new写一行简单的代码，当执行这行代码时，会自动在堆里进行存储分配。当然为这种灵活性必须付出相应的代价：用堆进行储分配和清理可能比用堆栈存储分配需要更多的时间</li>
  <li>4.<code class="language-plaintext highlighter-rouge">常量存储</code>： 常量值通常直接存放在程序代码内部</li>
  <li>5.<code class="language-plaintext highlighter-rouge">非RAM存储</code>:如果数据完全存活于程序之外，那么它可以不受程序的任何控制，在程序没有运行时也可以存在。其中两个基本的例子是流对象和持久化对象。在流对象中，
对象转化成字节流，通常被发送给另一台机器。在持久化对象中，对象被存放于磁盘上。</li>
</ul>

<h1 id="5java操作符">5.java操作符</h1>

<p><img src="http://walidream.com:9999/blogImage/java/java_3.png" alt="ssl" /></p>

<p>当表达式复杂时，建议使用括号<code class="language-plaintext highlighter-rouge">()</code></p>

<table>
  <thead>
    <tr>
      <th>优先级</th>
      <th>运算符</th>
      <th>结合性</th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>()、[]、{}</td>
      <td>从左向右</td>
      <td> </td>
    </tr>
    <tr>
      <td>2</td>
      <td>!、+、-、~、++、–</td>
      <td>从右向左</td>
      <td> </td>
    </tr>
    <tr>
      <td>3</td>
      <td>*、/、%</td>
      <td>从左向右</td>
      <td> </td>
    </tr>
    <tr>
      <td>4</td>
      <td>+、-</td>
      <td>从左向右</td>
      <td> </td>
    </tr>
    <tr>
      <td>5</td>
      <td>«、»、»&gt;</td>
      <td>从左向右</td>
      <td> </td>
    </tr>
    <tr>
      <td>6</td>
      <td>&lt;、&lt;=、&gt;、&gt;=、instanceof</td>
      <td>从左向右</td>
      <td> </td>
    </tr>
    <tr>
      <td>7</td>
      <td>==、!=</td>
      <td>从左向右</td>
      <td> </td>
    </tr>
    <tr>
      <td>8</td>
      <td>&amp;</td>
      <td>从左向右</td>
      <td> </td>
    </tr>
    <tr>
      <td>9</td>
      <td>^</td>
      <td>从左向右</td>
      <td> </td>
    </tr>
    <tr>
      <td>10</td>
      <td>|</td>
      <td>从左向右</td>
      <td> </td>
    </tr>
    <tr>
      <td>11</td>
      <td>&amp;&amp;</td>
      <td>从左向右</td>
      <td> </td>
    </tr>
    <tr>
      <td>12</td>
      <td>||</td>
      <td>从左向右</td>
      <td> </td>
    </tr>
    <tr>
      <td>13</td>
      <td>?:</td>
      <td>从右向左</td>
      <td> </td>
    </tr>
    <tr>
      <td>14</td>
      <td>=、+=、-=、*=、/=、&amp;=、</td>
      <td>=、^=、~=、«=、»=、»&gt;=</td>
      <td>从右向左</td>
    </tr>
  </tbody>
</table>

:ET