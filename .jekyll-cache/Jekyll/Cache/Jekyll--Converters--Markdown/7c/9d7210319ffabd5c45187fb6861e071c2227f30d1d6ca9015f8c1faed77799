I"w;<p>find命令用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示。</p>

<ul>
  <li><a href="http://man.linuxde.net/find" title="http://man.linuxde.net/find" target="_blank">find命令原文</a></li>
</ul>

<h1 id="1语法">1.语法</h1>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find(选项)(参数)
</code></pre></div></div>

<h1 id="2选项">2.选项</h1>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-amin&lt;分钟&gt;：查找在指定时间曾被存取过的文件或目录，单位以分钟计算
-anewer&lt;参考文件或目录&gt;：查找其存取时间较指定文件或目录的存取时间更接近现在的文件或目录
-atime&lt;24小时数&gt;：查找在指定时间曾被存取过的文件或目录，单位以24小时计算
-cmin&lt;分钟&gt;：查找在指定时间之时被更改过的文件或目录
-cnewer&lt;参考文件或目录&gt;查找其更改时间较指定文件或目录的更改时间更接近现在的文件或目录
-ctime&lt;24小时数&gt;：查找在指定时间之时被更改的文件或目录，单位以24小时计算
-daystart：从本日开始计算时间
-depth：从指定目录下最深层的子目录开始查找
-expty：寻找文件大小为0 Byte的文件，或目录下没有任何子目录或文件的空目录
-exec&lt;执行指令&gt;：假设find指令的回传值为True，就执行该指令
-false：将find指令的回传值皆设为False
-fls&lt;列表文件&gt;：此参数的效果和指定“-ls”参数类似，但会把结果保存为指定的列表文件
-follow：排除符号连接
-fprint&lt;列表文件&gt;：此参数的效果和指定“-print”参数类似，但会把结果保存成指定的列表文件
-fprint0&lt;列表文件&gt;：此参数的效果和指定“-print0”参数类似，但会把结果保存成指定的列表文件
-fprintf&lt;列表文件&gt;&lt;输出格式&gt;：此参数的效果和指定“-printf”参数类似，但会把结果保存成指定的列表文件
-fstype&lt;文件系统类型&gt;：只寻找该文件系统类型下的文件或目录
-gid&lt;群组识别码&gt;：查找符合指定之群组识别码的文件或目录
-group&lt;群组名称&gt;：查找符合指定之群组名称的文件或目录
-help或——help：在线帮助
-ilname&lt;范本样式&gt;：此参数的效果和指定“-lname”参数类似，但忽略字符大小写的差别
-iname&lt;范本样式&gt;：此参数的效果和指定“-name”参数类似，但忽略字符大小写的差别
-inum&lt;inode编号&gt;：查找符合指定的inode编号的文件或目录
-ipath&lt;范本样式&gt;：此参数的效果和指定“-path”参数类似，但忽略字符大小写的差别
-iregex&lt;范本样式&gt;：此参数的效果和指定“-regexe”参数类似，但忽略字符大小写的差别
-links&lt;连接数目&gt;：查找符合指定的硬连接数目的文件或目录
-iname&lt;范本样式&gt;：指定字符串作为寻找符号连接的范本样式
-ls：假设find指令的回传值为Ture，就将文件或目录名称列出到标准输出
-maxdepth&lt;目录层级&gt;：设置最大目录层级
-mindepth&lt;目录层级&gt;：设置最小目录层级
-mmin&lt;分钟&gt;：查找在指定时间曾被更改过的文件或目录，单位以分钟计算
-mount：此参数的效果和指定“-xdev”相同
-mtime&lt;24小时数&gt;：查找在指定时间曾被更改过的文件或目录，单位以24小时计算
-name&lt;范本样式&gt;：指定字符串作为寻找文件或目录的范本样式
-newer&lt;参考文件或目录&gt;：查找其更改时间较指定文件或目录的更改时间更接近现在的文件或目录
-nogroup：找出不属于本地主机群组识别码的文件或目录
-noleaf：不去考虑目录至少需拥有两个硬连接存在
-nouser：找出不属于本地主机用户识别码的文件或目录
-ok&lt;执行指令&gt;：此参数的效果和指定“-exec”类似，但在执行指令之前会先询问用户，若回答“y”或“Y”，则放弃执行命令
-path&lt;范本样式&gt;：指定字符串作为寻找目录的范本样式
-perm&lt;权限数值&gt;：查找符合指定的权限数值的文件或目录
-print：假设find指令的回传值为Ture，就将文件或目录名称列出到标准输出。格式为每列一个名称，每个名称前皆有“./”字符串
-print0：假设find指令的回传值为Ture，就将文件或目录名称列出到标准输出。格式为全部的名称皆在同一行
-printf&lt;输出格式&gt;：假设find指令的回传值为Ture，就将文件或目录名称列出到标准输出。格式可以自行指定
-prune：不寻找字符串作为寻找文件或目录的范本样式
-regex&lt;范本样式&gt;：指定字符串作为寻找文件或目录的范本样式
-size&lt;文件大小&gt;：查找符合指定的文件大小的文件
-true：将find指令的回传值皆设为True
-typ&lt;文件类型&gt;：只寻找符合指定的文件类型的文件
-uid&lt;用户识别码&gt;：查找符合指定的用户识别码的文件或目录
-used&lt;日数&gt;：查找文件或目录被更改之后在指定时间曾被存取过的文件或目录，单位以日计算
-user&lt;拥有者名称&gt;：查找符和指定的拥有者名称的文件或目录
-version或——version：显示版本信息
-xdev：将范围局限在先行的文件系统中
-xtype&lt;文件类型&gt;：此参数的效果和指定“-type”参数类似，差别在于它针对符号连接检查
</code></pre></div></div>

<h1 id="3参数">3.参数</h1>

<p>起始目录：查找文件的起始目录。</p>

<h1 id="4实例">4.实例</h1>

<h4 id="根据文件或者正则表达式进行匹配">根据文件或者正则表达式进行匹配</h4>

<p>列出当前目录及子目录下所有文件和文件夹</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find .
</code></pre></div></div>

<p>在/home目录下查找以.txt结尾的文件名</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find /home -name "*.txt"
</code></pre></div></div>

<p>在/home目录下查找以.txt结尾的文件名，但忽略大小写</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find /home -iname "*.txt"
</code></pre></div></div>

<p>当前目录及子目录下查找所有以.txt和.pdf结尾的文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . \( -name "*.txt" -o -name "*.pdf" \)
或
find . -name "*.txt" -o -name "*.pdf" 
</code></pre></div></div>

<p>匹配文件路径或者文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find /usr/ -path "*local*"
</code></pre></div></div>

<p>基于正则表达式匹配文件路径</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -regex ".*\(\.txt\|\.pdf\)$"
</code></pre></div></div>

<p>基于正则表达式匹配文件路径.但忽略大小写</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -iregex ".*\(\.txt\|\.pdf\)$"
</code></pre></div></div>

<h4 id="否定参数">否定参数</h4>

<p>找出/home下不是以.txt结尾的文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find /home ! -name "*.txt"
</code></pre></div></div>

<h4 id="根据文件类型进行搜索">根据文件类型进行搜索</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type 类型参数
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">类型参数列表：</code></p>
<ul>
  <li>f 普通文件</li>
  <li>l 符号连接</li>
  <li>d 目录</li>
  <li>c 字符设备</li>
  <li>b 块设备</li>
  <li>s 套接字</li>
  <li>p Fifo</li>
</ul>

<h4 id="基于目录深度搜索">基于目录深度搜索</h4>

<p>向下最大深度限制为3</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -maxdepth 3 -type f
</code></pre></div></div>

<p>搜索出深度距离当前目录至少2个子目录的所有文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -mindepth 2 -type f
</code></pre></div></div>

<h4 id="根据文件时间戳进行搜索">根据文件时间戳进行搜索</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f 时间戳
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">UNIX/Linux文件系统每个文件都有三种时间戳:</code></p>
<ul>
  <li>访问时间（-atime/天，-amin/分钟）：用户最近一次访问时间。</li>
  <li>修改时间（-mtime/天，-mmin/分钟）：文件最后一次修改时间。</li>
  <li>变化时间（-ctime/天，-cmin/分钟）：文件数据元（例如权限等）最后一次修改时间。</li>
</ul>

<p>搜索恰好在七天前被访问过的所有文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f -atime 7
</code></pre></div></div>

<p>搜索超过七天内被访问过的所有文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f -atime +7
</code></pre></div></div>

<p>搜索访问时间超过10分钟的所有文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f -amin +10
</code></pre></div></div>

<p>找出比file.log修改时间更长的所有文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f -newer file.log
</code></pre></div></div>

<h4 id="根据文件大小进行匹配">根据文件大小进行匹配</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f -size 文件大小单元
</code></pre></div></div>

<p>文件大小单元：</p>
<ul>
  <li>b —— 块（512字节）</li>
  <li>c —— 字节</li>
  <li>w —— 字（2字节）</li>
  <li>k —— 千字节</li>
  <li>M —— 兆字节</li>
  <li>G —— 吉字节</li>
</ul>

<p>搜索大于10KB的文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f -size +10k
</code></pre></div></div>

<p>搜索小于10KB的文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f -size -10k
</code></pre></div></div>

<p>搜索等于10KB的文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f -size 10k
</code></pre></div></div>

<h4 id="删除匹配文件">删除匹配文件</h4>

<p>删除当前目录下所有.txt文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f -name "*.txt" -delete
</code></pre></div></div>

<h4 id="根据文件权限所有权进行匹配">根据文件权限/所有权进行匹配</h4>

<p>当前目录下搜索出权限为777的文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f -perm 777
</code></pre></div></div>

<p>找出当前目录下权限不是644的php文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f -name "*.php" ! -perm 644
</code></pre></div></div>

<p>找出当前目录用户tom拥有的所有文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f -user tom
</code></pre></div></div>

<p>找出当前目录用户组sunk拥有的所有文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f -group sunk
</code></pre></div></div>

<h4 id="借助-exec选项与其他命令结合使用">借助-exec选项与其他命令结合使用</h4>

<p>找出当前目录下所有root的文件，并把所有权更改为用户tom</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find .-type f -user root -exec chown tom {} \;
</code></pre></div></div>

<p>上例中，{} 用于与-exec选项结合使用来匹配所有文件，然后会被替换为相应的文件名。</p>

<p>找出自己家目录下所有的.txt文件并删除</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find $HOME/. -name "*.txt" -ok rm {} \;
</code></pre></div></div>

<p>上例中，-ok和-exec行为一样，不过它会给出提示，是否执行相应的操作。</p>

<p>查找当前目录下所有.txt文件并把他们拼接起来写入到all.txt文件中</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f -name "*.txt" -exec cat {} \;&gt; all.txt
</code></pre></div></div>

<p>将30天前的.log文件移动到old目录中</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f -mtime +30 -name "*.log" -exec cp {} old \;
</code></pre></div></div>

<p>找出当前目录下所有.txt文件并以“File:文件名”的形式打印出来</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -type f -name "*.txt" -exec printf "File: %s\n" {} \;
</code></pre></div></div>

<p>因为单行命令中-exec参数中无法使用多个命令，以下方法可以实现在-exec之后接受多条命令</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-exec ./text.sh {} \;
</code></pre></div></div>

<h4 id="搜索但跳出指定的目录">搜索但跳出指定的目录</h4>

<p>查找当前目录或者子目录下所有.txt文件，但是跳过子目录sk</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -path "./sk" -prune -o -name "*.txt" -print
</code></pre></div></div>

<h4 id="find其他技巧收集">find其他技巧收集</h4>

<p>要列出所有长度为零的文件</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -empty
</code></pre></div></div>

:ET