I"X*<p>这小节小菜将记录三种虚拟主机的配置，第一种是nginx虚拟主机<code class="language-plaintext highlighter-rouge">单网卡多IP配置</code>，第二种是nginx虚拟主机基于<code class="language-plaintext highlighter-rouge">多端口配置</code>，第三种是nginx虚拟主机基于<code class="language-plaintext highlighter-rouge">多域名配置</code>来实现
小菜将一一举例，企业中长用到的还是后两种方法。</p>

<blockquote>
  <p>nginx -t -c /etc/nginx/nginx.conf   #命令了检测语法</p>
</blockquote>

<blockquote>
  <p>nginx -s reload -c /etc/nginx/nginx.conf  #重启配置</p>
</blockquote>

<blockquote>
  <p>nginx -s stop -c /etc/nginx/nginx.conf   #停止nginx服务</p>
</blockquote>

<blockquote>
  <p>nginx -c /etc/nginx/nginx.conf           #重启nginx服务</p>
</blockquote>

<p>开始之前先做点准备工作，输入</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd /usr/share/nginx/html
</code></pre></div></div>

<p>在该目录下面我们建两个文件夹<code class="language-plaintext highlighter-rouge">server1</code>和<code class="language-plaintext highlighter-rouge">server2</code>，在文件建里面分别建<code class="language-plaintext highlighter-rouge">index.html</code>,内容为</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;head&gt;</span>
<span class="nt">&lt;title&gt;</span>Welcome to nginx!<span class="nt">&lt;/title&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>

<span class="nt">&lt;h1&gt;</span>服务器server1<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p>将index.html中的<code class="language-plaintext highlighter-rouge">server1</code>修改为<code class="language-plaintext highlighter-rouge">server2</code>。创建好后路径视图</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">/</span><span class="nx">usr</span><span class="o">/</span><span class="nx">share</span><span class="o">/</span><span class="nx">nginx</span><span class="o">/</span><span class="nx">html</span>
<span class="o">|</span>
<span class="o">|--</span><span class="nx">server1</span>
<span class="o">|</span>	<span class="o">|--</span><span class="nx">index</span><span class="p">.</span><span class="nx">html</span>
<span class="o">|</span>
<span class="o">|--</span><span class="nx">server2</span>	
	<span class="o">|--</span><span class="nx">index</span><span class="p">.</span><span class="nx">html</span>
</code></pre></div></div>

<p>进入nginx配置，将默认的<code class="language-plaintext highlighter-rouge">default.conf</code>拷贝两份，分别命名为<code class="language-plaintext highlighter-rouge">server1.conf</code>和<code class="language-plaintext highlighter-rouge">server2.conf</code></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd /etc/nginx/conf.d

cp default.conf server1.conf 

cp default.conf server2.conf 
</code></pre></div></div>

<h1 id="1单网卡多ip配置">1.单网卡多IP配置</h1>

<p>查看本机ip</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># ip a
</code></pre></div></div>

<p>输入信息</p>

<pre><code class="language-linux">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 00:16:3e:0c:3f:85 brd ff:ff:ff:ff:ff:ff
    inet 172.19.139.239/20 brd 172.19.143.255 scope global eth0
       valid_lft forever preferred_lft forever

</code></pre>
<p>可以看出有两个网卡，一个是<code class="language-plaintext highlighter-rouge">lo</code>是本地回环网卡，一个是物理网卡。从<code class="language-plaintext highlighter-rouge">172.19.139.239/20 brd 172.19.143.255</code>地址段中可添加ip，添加ip前先ping一下，防止和本地ip冲突</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ping 172.19.139.240
</code></pre></div></div>

<p>ping不通时，说明未和本地ip冲突，然后添加到本地设备，由于我的机器本地设备是eth0</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ip a add 172.19.139.240/20 dev eth0
</code></pre></div></div>

<p>添加好ip之后查看下</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ip a
</code></pre></div></div>

<p>输入信息</p>

<pre><code class="language-linux">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 00:16:3e:0c:3f:85 brd ff:ff:ff:ff:ff:ff
    inet 172.19.139.239/20 brd 172.19.143.255 scope global eth0
       valid_lft forever preferred_lft forever
    inet 172.19.139.240/20 scope global secondary eth0
       valid_lft forever preferred_lft forever

</code></pre>
<p>我们看到<code class="language-plaintext highlighter-rouge">172.19.139.240/20</code>就被添加上去，然后切换到nginx配置目录</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd  /etc/nginx/conf.d

vim server1.conf
</code></pre></div></div>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#这里我们只修改两处地方</span>

<span class="c1">#将原来的listen  80 修改为 listen      172.19.139.240:80;</span>
<span class="k">listen</span>      <span class="nf">172.19.139.240</span><span class="p">:</span><span class="mi">80</span><span class="p">;</span>
<span class="c1">#将原来指向的目录root   /usr/share/nginx/html 修改为 root   /usr/share/nginx/html/server1;</span>
<span class="k">root</span>   <span class="n">/usr/share/nginx/html/server1</span><span class="p">;</span>
</code></pre></div></div>
<p>server2.conf文件和server1.conf修改的地方一样，只不过ip和文件路径指定不同。修改好后，重启nginx服务就可以了</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nginx -s stop -c /etc/nginx/nginx.conf   #停止nginx服务


nginx -c /etc/nginx/nginx.conf           #重启nginx服务
</code></pre></div></div>

<p>在虚拟机里是可以访问的，但是小菜我用的是阿里云服务器，阿里云服务器对外的访问ip是一个。单网卡虚拟主机配置在阿里云服务器上不能访问。</p>

<h1 id="2单ip多端口配置">2.单ip多端口配置</h1>

<p>ip多端口配置这个很好理解，就是在nginx上监听不同的端口号，我们来直接修改端口号</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd /etc/nginx/conf.d


vim server1.conf
</code></pre></div></div>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#将原来的listen      172.19.139.240:80修改为 listen  80 ;</span>
<span class="k">listen</span>    <span class="mi">80</span><span class="p">;</span>
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vim server2.conf
</code></pre></div></div>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">listen</span>    <span class="mi">9000</span><span class="p">;</span>
</code></pre></div></div>

<p>修改完成后</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nginx -s stop -c /etc/nginx/nginx.conf   #停止nginx服务


nginx -c /etc/nginx/nginx.conf           #重启nginx服务
</code></pre></div></div>

<p>因为我们之前配置了两个应用<code class="language-plaintext highlighter-rouge">server1</code>和<code class="language-plaintext highlighter-rouge">server2</code>，所以这里我们只修改端口号就可以了。然后在阿里云安全组设置允许9000端口通过就可以了。</p>

<p><img src="http://walidream.com:9999/blogImage/nginx/1542165418%281%29.jpg" alt="ssl" />
<img src="http://walidream.com:9999/blogImage/nginx/1542165580%282%29.jpg" alt="ssl" />
<img src="http://walidream.com:9999/blogImage/nginx/1542165639%283%29.jpg" alt="ssl" /></p>

<h1 id="3多域名配置">3.多域名配置</h1>

<p>多端口配置虚拟主机配置完成，最后来配置多域名。自己去阿里云域名购买域名（域名是要备案的），小菜这里有两个域名<code class="language-plaintext highlighter-rouge">walidream.com</code>和<code class="language-plaintext highlighter-rouge">yagm.xin</code>，正好可以用来演示。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd /etc/nginx/conf.d

vim server1.conf
</code></pre></div></div>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">listen</span>    <span class="mi">80</span><span class="p">;</span>
<span class="k">server_name</span>  <span class="s">walidream.com</span><span class="p">;</span>
</code></pre></div></div>
<p>将server1.conf配置好后，修改同样的key</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vim server2.conf
</code></pre></div></div>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">listen</span>    <span class="mi">80</span><span class="p">;</span>
<span class="k">server_name</span>  <span class="s">yagm.xin</span><span class="p">;</span>
</code></pre></div></div>

<p>修改完成后</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nginx -s stop -c /etc/nginx/nginx.conf   #停止nginx服务


nginx -c /etc/nginx/nginx.conf           #重启nginx服务
</code></pre></div></div>

<p>在浏览器中输入域名查看</p>

:ET