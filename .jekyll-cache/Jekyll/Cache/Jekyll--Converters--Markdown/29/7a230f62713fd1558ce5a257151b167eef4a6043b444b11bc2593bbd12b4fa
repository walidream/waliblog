I"X<p>gRPC是一个高性能、通用的开源 RPC 框架，其由 Google 主要面向移动应用开发并基于HTTP/2协议标准而设计，基于ProtoBuf(Protocol Buffers) 序列化协议开发，且支持众多开发语言。gRPC 提供了一种简单的方法来精确地定义服务和为 iOS、Android 和后台支持服务自动生成可靠性很强的客户端功能库。客户端充分利用高级流和链接功能，从而有助于节省带宽、降低的 TCP 链接次数、节省 CPU 使用、和电池寿命。</p>

<ul>
  <li><a href="https://doc.oschina.net/grpc?t=58008" title="https://doc.oschina.net/grpc?t=58008" target="_blank">gRPC 官方文档中文版</a></li>
  <li><a href="https://blog.csdn.net/xuduorui/article/details/78278808" title="https://blog.csdn.net/xuduorui/article/details/78278808" target="_blank">uxff 博主</a></li>
</ul>

<h1 id="1grpc模式">1.GRPC模式</h1>

<ul>
  <li>简单模式</li>
  <li>双向数据流模式</li>
</ul>

<h4 id="简单模式">简单模式</h4>

<p>客户端发起一次请求，服务端响应一个请求</p>

<h4 id="双向数据流模式">双向数据流模式</h4>

<p>客户端和服务端都可以向对方发送数据流，这个时候双方的数据可以同时互相发送</p>

<h1 id="2nginx作为grpc反向代理原理">2.nginx作为grpc反向代理原理</h1>

<p><img src="http://walidream.com:9999/blogImage/nginx/nginx_62.jpg" alt="ssl" /></p>

<h1 id="3升级nginx">3.升级nginx</h1>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nginx -v
</code></pre></div></div>

<p>由于nginx 1.13.10版本之后才支持GRPC,如果nginx版本较低，请升级<a href="nginx/2019/01/05/nginx-24.html" title="nginx/2019/01/05/nginx-24.html" target="_blank">nginx 版本升级</a></p>

<h1 id="4部署go语言环境">4.部署go语言环境</h1>

<p>GRPC支持很多语言，如C++、C#、GO、JAVA、Node.js、Python、Ruby、Web等。小菜在这里演示用的是GO语言。</p>

<p>进入<a href="https://golang.org/" title="https://golang.org/" target="_blank">Go 官方网站</a>下载我们需要的<a href="https://golang.org/dl/" title="https://golang.org/dl/" target="_blank">Go 下载包</a>，根据自己的操作系统选择不同的GO包。拷贝下载地址</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd /opt/download
wget https://dl.google.com/go/go1.11.4.linux-amd64.tar.gz
tar -xvf go1.11.4.linux-amd64.tar.gz 
mv go /usr/local/
cd /usr/local/
/usr/local/go/bin/go version   #查看go版本
echo $PATH                     
vim /etc/profile
</code></pre></div></div>

<p>在文件末尾添加环境变量</p>

<pre><code class="language-linux">export GOPATH=/opt/go
export PATH=$PATH:/usr/local/go/bin
</code></pre>
<p>　　　</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>source /etc/profile  #使配置文件生效
go version           #在任何地方输入，输出go版本说明go环境安装好了
</code></pre></div></div>

<h1 id="5安装grpc框架">5.安装GRPC框架</h1>

<ul>
  <li><a href="https://grpc.io/docs/" title="https://grpc.io/docs/" target="_blank">GRPC官方文档</a></li>
</ul>

<p>　　　　</p>
<pre><code class="language-linux">git clone https://github.com/grpc/grpc-go.git $GOPATH/src/google.golang.org/grpc
git clone https://github.com/golang/net.git $GOPATH/src/golang.org/x/net
git clone https://github.com/golang/text.git $GOPATH/src/golang.org/x/text
go get -u github.com/golang/protobuf/{proto,protoc-gen-go}
git clone https://github.com/google/go-genproto.git $GOPATH/src/google.golang.org/genproto
git clone https://github.com/golang/sys.git $GOPATH/src/golang.org/x/sys
cd $GOPATH/src/
go install google.golang.org/grpc
</code></pre>

<p>测试用例
	cd /opt
	git clone https://github.com/grpc/grpc-go.git</p>

:ET