I":<p>nginx常见的访问控制第一个基于ip的访问控制<code class="language-plaintext highlighter-rouge">http_access_module</code>模块，第二个基于用户的信任登录<code class="language-plaintext highlighter-rouge">http_auth_basic_module</code>模块，下面小菜就简单说明这两个模块如何进行nginx的访问控制。在此之前
小菜先放上这两个模块的文档地址。</p>

<p>●　<a href="http://nginx.org/en/docs/http/ngx_http_access_module.html" title="http://nginx.org/en/docs/http/ngx_http_access_module.html" target="_blank">http_access_module</a></p>

<p>●　<a href="http://nginx.org/en/docs/http/ngx_http_auth_basic_module.html" title="http://nginx.org/en/docs/http/ngx_http_auth_basic_module.html" target="_blank">http_auth_basic_module</a></p>

<h1 id="1http_access_module">1.http_access_module</h1>

<h3 id="1allow">1.allow</h3>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Syntax:</span>	<span class="s">allow</span> <span class="s">address</span> <span class="s">|</span> <span class="s">CIDR</span> <span class="s">|</span> <span class="s">unix:</span> <span class="s">|</span> <span class="s">all</span><span class="p">;</span>
<span class="k">Default:</span> <span class="s">—</span>
<span class="s">Context:</span> <span class="s">http,</span> <span class="s">server,</span> <span class="s">location,</span> <span class="s">limit_except</span>
</code></pre></div></div>

<h3 id="2deny">2.deny</h3>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Syntax:</span>	<span class="s">deny</span> <span class="s">address</span> <span class="s">|</span> <span class="s">CIDR</span> <span class="s">|</span> <span class="s">unix:</span> <span class="s">|</span> <span class="s">all</span><span class="p">;</span>
<span class="k">Default:</span> <span class="s">—</span>
<span class="s">Context:</span> <span class="s">http,</span> <span class="s">server,</span> <span class="s">location,</span> <span class="s">limit_except</span>

</code></pre></div></div>

<p>名词解释</p>
<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">address</span>  <span class="s">指IP地址(192.168.1.1)</span>
<span class="s">CIDR</span>     <span class="s">指网段(192.168.1.0/24)</span>
<span class="s">unix</span>     <span class="s">主要是在linux和unix用到的socket访问</span>
<span class="s">all</span>      <span class="s">所有人访问</span>
</code></pre></div></div>

<p>示例配置</p>

<p>1.禁止<code class="language-plaintext highlighter-rouge">114.86.45.85</code>访问,允许所有ip访问</p>
<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">location</span> <span class="n">/</span> <span class="p">{</span> 
	<span class="kn">root</span>   <span class="n">/opt/app/code</span><span class="p">;</span>
	<span class="kn">deny</span>   <span class="mi">114</span><span class="s">.86.45.85</span><span class="p">;</span>
	<span class="kn">allow</span>  <span class="s">all</span><span class="p">;</span>
	<span class="kn">index</span>  <span class="s">index.html</span> <span class="s">index.htm</span><span class="p">;</span>
<span class="p">}</span>   
</code></pre></div></div>

<p>2.允许<code class="language-plaintext highlighter-rouge">222.128.189.0/24</code>网段ip访问，禁止所有ip访问</p>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">location</span> <span class="p">~</span> <span class="sr">/</span><span class="p">{</span>
	<span class="kn">root</span>   <span class="n">/opt/app/code</span><span class="p">;</span>
	<span class="kn">allow</span> <span class="mi">222</span><span class="s">.128.189.0/24</span><span class="p">;</span>
	<span class="kn">deny</span> <span class="s">all</span><span class="p">;</span>
	<span class="kn">index</span>  <span class="s">index.html</span> <span class="s">index.htm</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>allow 和 deny是配合使用的。</p>

<p>局限性</p>

<p><img src="http://walidream.com:9999/blogImage/nginx/nginx_6.jpg" alt="ssl" /></p>

<p>如果客户端使用代理来访问网站，这样就不能保证禁止或允许某些ip访问。</p>

<h1 id="2http_auth_basic_module">2.http_auth_basic_module</h1>

<h3 id="1auth_basic">1.auth_basic</h3>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Syntax:</span>	<span class="s">auth_basic</span> <span class="s">string</span> <span class="s">|</span> <span class="no">off</span><span class="p">;</span>
<span class="k">Default:</span> <span class="s">auth_basic</span> <span class="no">off</span><span class="p">;</span>
<span class="k">Context:</span> <span class="s">http,</span> <span class="s">server,</span> <span class="s">location,</span> <span class="s">limit_except</span>

</code></pre></div></div>

<h3 id="2auth_basic_user_file">2.auth_basic_user_file</h3>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Syntax:</span>	<span class="s">auth_basic_user_file</span> <span class="s">file</span><span class="p">;</span>
<span class="k">Default:</span> <span class="s">—</span>
<span class="s">Context:</span> <span class="s">http,</span> <span class="s">server,</span> <span class="s">location,</span> <span class="s">limit_except</span>
</code></pre></div></div>

<p>示例配置</p>

<p>新建一个密码文件,名称为auth_conf，用户名为wali，回车后输入密码123456，确认密码</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>htpasswd -c ./auth_conf wali
</code></pre></div></div>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">location</span> <span class="p">~</span> <span class="sr">^/admin.html</span> <span class="p">{</span>
	<span class="kn">root</span>   <span class="n">/opt/app/code</span><span class="p">;</span>
	<span class="kn">auth_basic</span> <span class="s">"Auth</span> <span class="s">access</span> <span class="s">test!input</span> <span class="s">your</span> <span class="s">passward!"</span><span class="p">;</span>
	<span class="kn">auth_basic_user_file</span> <span class="n">/etc/nginx/auth_conf</span><span class="p">;</span>
	<span class="kn">index</span>  <span class="s">index.html</span> <span class="s">index.htm</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>重新服务</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nginx -s reload -c /etc/nginx/nginx.conf
</code></pre></div></div>

<p>然后在访问http://walidream.com，就会先让你输入密码。输入正确然后才能访问。</p>

<h3 id="3局限性">3.局限性</h3>

<p>●　用户信息依赖文件方式</p>

<p>●　操作管理机械，效率低下</p>

:ET