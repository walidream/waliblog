I"<p>小菜之前在webpack配置中区分开发环境和生产环境，但是在源代码中还不能区分当前是开发环境还是生产环境。我们可能会遇到这种情况，如在开发的时候请求地址<code class="language-plaintext highlighter-rouge">http://www.waliblog.com/login</code>但是项目上线后，请求地址就变成<code class="language-plaintext highlighter-rouge">http://www.baidu.com/login</code>。我们需要完成这种操作，需要用到<a href="https://webpack.docschina.org/plugins/define-plugin/" title="https://webpack.docschina.org/plugins/define-plugin/" target="_blank">DefinePlugin 文档</a>插件</p>

<h1 id="1安装">1.安装</h1>

<p>DefinePlugin 允许创建一个在编译时可以配置的全局常量。这可能会对开发模式和生产模式的构建允许不同的行为非常有用。如果在开发构建中，而不在发布构建中执行日志记录，则可以使用全局常量来决定是否记录日志。这就是 DefinePlugin 的用处，设置它，就可以忘记开发环境和生产环境构建的规则。之前安装过<code class="language-plaintext highlighter-rouge">webpack</code>就不需要安装了</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yarn add webpack
</code></pre></div></div>

<h1 id="2配置">2.配置</h1>

<h4 id="buildpluginsjs">build/plugins.js</h4>

<div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">const dirpath = require('./base/path');
const config = require('./base/config');
</span>
const webpack = require('webpack');
<span class="p">const HtmlWebpackPlugin = require('html-webpack-plugin');    //生成html文件
const { CleanWebpackPlugin } = require('clean-webpack-plugin');  //清除
const MiniCssExtractPlugin = require("mini-css-extract-plugin");  //css样式提取
</span>

<span class="p">let plugins = [
</span>	new HtmlWebpackPlugin({
		title: '瓦力博客',
		template: dirpath.src + '/index.html'   //以src/index.html为编译模板
	}),
	new  MiniCssExtractPlugin({
		filename: config.NODE_ENV == 'development'?'[name.css]': `${dirpath.css}/[name].[hash].css`,
		chunkFilename: config.NODE_ENV == 'development'?'[id].css': `${dirpath.css}/[id].[hash].css`
	}),   //css提取
	new webpack.ProvidePlugin({
		_:'loadsh',
		url: ['../src/api/apipath', 'url']
	}),
<span class="gi">+	new webpack.DefinePlugin({ 
+		IS_PRODUCTION: config.NODE_ENV == 'development'?JSON.stringify(false):JSON.stringify(true),
+	}),
</span>	new CleanWebpackPlugin()
<span class="err">]</span>

<span class="p">if('development' == config.NODE_ENV){
</span>	plugins.push(new webpack.HotModuleReplacementPlugin());
<span class="err">}</span>

<span class="p">module.exports = plugins;
</span></code></pre></div></div>

<h4 id="apiapipathjs">api/apipath.js</h4>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">host</span>

<span class="k">if</span><span class="p">(</span><span class="nx">IS_PRODUCTION</span><span class="p">){</span>
    <span class="nx">host</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">http://www.baidu.com</span><span class="dl">'</span>
<span class="p">}</span><span class="k">else</span> <span class="p">{</span>
    <span class="nx">host</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">http://www.walibo.com</span><span class="dl">'</span>
<span class="p">}</span>

<span class="k">export</span> <span class="kd">const</span> <span class="nx">url</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">login</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">host</span><span class="p">}</span><span class="s2">/login`</span><span class="p">,</span>         <span class="c1">//登录</span>
    <span class="na">signout</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">host</span><span class="p">}</span><span class="s2">/signout`</span>      <span class="c1">//退出登录</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="indexjs">index.js</h4>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="开发webpack">开发webpack</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yarn run dev
</code></pre></div></div>

<p>打开控制台，会看到控制台输出：</p>

<pre><code class="language-txt">Object
login: "http://www.walibo.com/login"
signout: "http://www.walibo.com/signout"
</code></pre>

<h4 id="生产webpack">生产webpack</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yarn run prod
</code></pre></div></div>

<p>打开控制台，会看到控制台输出：</p>

<pre><code class="language-txt">{login: "http://www.baidu.com/login", signout: "http://www.baidu.com/signout"}
</code></pre>

<p>到此本小节就结束了，小伙伴们继续加油</p>

:ET